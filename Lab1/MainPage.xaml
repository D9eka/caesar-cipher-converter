<Page x:Class="Lab1.MainPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:Lab1" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <!-- Styles -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefault}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefault}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>
        <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource AccentButtonStyle}">
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource SubtitleTextBlockStyle}">
            <Setter Property="Margin" Value="0,0,0,15"/>
        </Style>
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
        </Style>
    </Page.Resources>
    <ScrollViewer Padding="20" HorizontalAlignment="Stretch" VerticalScrollBarVisibility="Auto">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainGrid.ColumnDefinitions[0].Width" Value="*"/>
                        <Setter Target="MainGrid.ColumnDefinitions[1].Width" Value="0"/>
                        <Setter Target="InputPanel.(Grid.Column)" Value="0"/>
                        <Setter Target="OutputPanel.(Grid.Column)" Value="0"/>
                        <Setter Target="InputPanel.(Grid.Row)" Value="0"/>
                        <Setter Target="OutputPanel.(Grid.Row)" Value="1"/>
                        <!-- Narrow layout for combo boxes -->
                        <Setter Target="ComboBoxesContainer.ColumnDefinitions[0].Width" Value="*"/>
                        <Setter Target="ComboBoxesContainer.ColumnDefinitions[1].Width" Value="0"/>
                        <Setter Target="ComboBoxesContainer.ColumnDefinitions[2].Width" Value="0"/>
                        <Setter Target="ComboBoxesContainer.RowDefinitions[0].Height" Value="Auto"/>
                        <Setter Target="ComboBoxesContainer.RowDefinitions[1].Height" Value="Auto"/>
                        <Setter Target="ComboBoxesContainer.RowDefinitions[2].Height" Value="Auto"/>
                        <Setter Target="AlphabetComboBox.(Grid.Column)" Value="0"/>
                        <Setter Target="AlphabetComboBox.(Grid.Row)" Value="0"/>
                        <Setter Target="AlphabetComboBox.Margin" Value="0,0,0,10"/>
                        <Setter Target="OperationComboBox.(Grid.Column)" Value="0"/>
                        <Setter Target="OperationComboBox.(Grid.Row)" Value="1"/>
                        <Setter Target="OperationComboBox.Margin" Value="0,0,0,10"/>
                        <Setter Target="ShiftComboBox.(Grid.Column)" Value="0"/>
                        <Setter Target="ShiftComboBox.(Grid.Row)" Value="2"/>
                        <Setter Target="ShiftComboBox.Margin" Value="0,0,0,0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1000"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainGrid.ColumnDefinitions[0].Width" Value="*"/>
                        <Setter Target="MainGrid.ColumnDefinitions[1].Width" Value="*"/>
                        <Setter Target="InputPanel.(Grid.Column)" Value="0"/>
                        <Setter Target="OutputPanel.(Grid.Column)" Value="1"/>
                        <Setter Target="InputPanel.(Grid.Row)" Value="0"/>
                        <Setter Target="OutputPanel.(Grid.Row)" Value="0"/>
                        <!-- Wide layout for combo boxes -->
                        <Setter Target="ComboBoxesContainer.ColumnDefinitions[0].Width" Value="*"/>
                        <Setter Target="ComboBoxesContainer.ColumnDefinitions[1].Width" Value="*"/>
                        <Setter Target="ComboBoxesContainer.ColumnDefinitions[2].Width" Value="*"/>
                        <Setter Target="ComboBoxesContainer.RowDefinitions[0].Height" Value="*"/>
                        <Setter Target="ComboBoxesContainer.RowDefinitions[1].Height" Value="0"/>
                        <Setter Target="ComboBoxesContainer.RowDefinitions[2].Height" Value="0"/>
                        <Setter Target="AlphabetComboBox.(Grid.Column)" Value="0"/>
                        <Setter Target="AlphabetComboBox.(Grid.Row)" Value="0"/>
                        <Setter Target="AlphabetComboBox.Margin" Value="0,0,10,0"/>
                        <Setter Target="OperationComboBox.(Grid.Column)" Value="1"/>
                        <Setter Target="OperationComboBox.(Grid.Row)" Value="0"/>
                        <Setter Target="OperationComboBox.Margin" Value="0,0,10,0"/>
                        <Setter Target="ShiftComboBox.(Grid.Column)" Value="2"/>
                        <Setter Target="ShiftComboBox.(Grid.Row)" Value="0"/>
                        <Setter Target="ShiftComboBox.Margin" Value="0,0,0,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid x:Name="MainGrid" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Input Panel -->
            <Border x:Name="InputPanel" Grid.Column="0" Grid.Row="0" Style="{StaticResource CardStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Ввод текста" Style="{StaticResource HeaderTextStyle}" Grid.Row="0"/>
                    <TextBox x:Name="InputTextBox" Grid.Row="1" Header="Текст для обработки" PlaceholderText="Введите текст или используйте кнопку 'Вставить'" TextWrapping="Wrap" AcceptsReturn="True" VerticalAlignment="Stretch" Text="{Binding InputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Content="Вставить из буфера" Grid.Row="2" Command="{Binding PasteCommand}" Style="{StaticResource PrimaryButtonStyle}"/>
                    <!-- ComboBoxes Container -->
                    <Grid x:Name="ComboBoxesContainer" Grid.Row="3" Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0"/>
                            <ColumnDefinition Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ComboBox x:Name="AlphabetComboBox" Header="Алфавит" ItemsSource="{Binding Alphabets}" DisplayMemberPath="UiName" SelectedItem="{Binding SelectedAlphabet, Mode=TwoWay}" Style="{StaticResource ComboBoxStyle}" Grid.Column="0" Grid.Row="0"/>
                        <ComboBox x:Name="OperationComboBox" Header="Операция" ItemsSource="{Binding Operations}" DisplayMemberPath="UiName" SelectedItem="{Binding SelectedOperation, Mode=TwoWay}" Style="{StaticResource ComboBoxStyle}" Grid.Column="0" Grid.Row="1"/>
                        <ComboBox x:Name="ShiftComboBox" Header="Сдвиг" ItemsSource="{Binding Shifts}" SelectedItem="{Binding SelectedShift, Mode=TwoWay}" Visibility="{Binding ShiftVisibility}" Style="{StaticResource ComboBoxStyle}" Grid.Column="0" Grid.Row="2"/>
                    </Grid>
                    <Button Content="Выполнить" Grid.Row="4" Command="{Binding CalculateCommand}" Style="{StaticResource PrimaryButtonStyle}"/>
                </Grid>
            </Border>
            <!-- Output Panel -->
            <Border x:Name="OutputPanel" Grid.Column="0" Grid.Row="1" Style="{StaticResource CardStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Результат" Style="{StaticResource HeaderTextStyle}" Grid.Row="0"/>
                    <TextBox x:Name="ResultTextBox" Grid.Row="1" Header="Результат обработки" TextWrapping="Wrap" AcceptsReturn="True" IsReadOnly="True" VerticalAlignment="Stretch" Text="{Binding OutputText}"/>
                    <Button Content="Копировать в буфер" Grid.Row="2" Command="{Binding CopyCommand}" Style="{StaticResource PrimaryButtonStyle}"/>
                </Grid>
            </Border>
        </Grid>
    </ScrollViewer>
</Page>